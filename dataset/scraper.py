
import requests
import os
import urllib.request
import shutil
import math
import csv

PEXELSAPI_KEY = '563492ad6f91700001000001252b83e783bf42e9b16e8907d260f883'


classes = {
	'fruits' : [
		'apple',
		'apricot',
		'banana',
		'blueberry',
		'cherry',
		'coconut',
		'grape',
		'guava',
		'jackfruit',
		'kiwifruit',
		'lemon',
		'lychee',
		'mango',
		'orange',
		'pear',
		'pineapple',
		'pomegranate',
		'strawberry',
	],
	'animals': [
		'squirrel',
		'dog',
		'pig',
		'lion',
		'mouse',
		'monkey',
		'elephant',
		'fox',
		'panda',
		'kangaroo',
		'cow',
		'leopard',
		'coyote',
		'hedgehog',
		'chimpanzee',
		'walrus',
		'goat',
		'koala',
		'hippopotamus',
		'sheep',
		'raccoon',
		'ox',
		'otter',
		'horse',
		'mole',
		'giraffe',
		'deer',
	],
	'birds' : [
		'Woodpecker',
		'Pigeon',
		'Peacock',
		'Rooster',
		'Vulture',
		'Swallow',
		'Seagull',
		'Quail',
		'Duck',
		'Pelican',
		'Parrot',
		'Turkey',
		'Crane',
		'Kingfisher',
		'Hummingbird',
		'Sparrow',
		'Ostrich',
		'Crow',
		'Raven',
		'Dove',
		'Hen',
		'Nightingale',
		'Eagle',
		'Swan',
		'Penguin',
		'Flamingo',
		'Goose',
		'Cuckoo',
		'Owl',
		'Hawk',
		'Goldfinch',
		'Robin',
		'Finch',
		'Stork',
		'Hornbill',
		'Bulbul',
		'Skylark',
		'Canary',
		'Wagtail',
		'Macaw',
		'Cockatoo',
		'Heron',
		'Toucan',
		'Jay',
		'Mynah',
		'Cardinal',
		'Chickadee',
		'Bluebird',
		'Swift',
		'Kiwi',
		'Mockingbird',
		'Pheasant',
		'Kite',
		'Falcon',
		'Mallard',
		'Bald eagle',
		'Night hawk',
		'Crossbill',
		'Puffin',
		'Koyal',
		'Emu',
	],
	'cities':[
		'Tokyo',
		'Delhi',
		'Shanghai',
		'São Paulo',
		'Mexico City',
		'Cairo',
		'Mumbai',
		'Beijing',
		'Dhaka',
		'Osaka',
		'New York City',
		'Karachi',
		'Buenos Aires',
		'Chongqing',
		'Istanbul',
		'Kolkata',
		'Manila',
		'Lagos',
		'Rio de Janeiro',
		'Guangzhou',
		'Los Angeles',
		'Moscow',
		'Shenzhen',
		'Lahore',
		'Bangalore',
		'Paris',
		'Bogotá',
		'Jakarta',
		'Chennai',
		'Lima',
		'Bangkok',
		'Seoul',
		'Nagoya',
		'Hyderabad',
		'London',
		'Tehran',
		'Chicago',
		'Nanjing',
		'Wuhan',
		'Ho Chi Minh City',
		'Luanda',
		'Ahmedabad',
		'Kuala Lumpur',
		'Hong Kong',
		'Hangzhou',
		'Foshan',
		'Shenyang',
		'Riyadh',
		'Baghdad',
		'Santiago',
		'Surat',
		'Madrid',
		'Suzhou',
		'Pune',
		'Harbin',
		'Houston',
		'Dallas',
		'Toronto',
		'Dar es Salaam',
		'Miami',
		'Belo Horizonte',
		'Singapore',
		'Philadelphia',
		'Atlanta',
		'Fukuoka',
		'Khartoum',
		'Barcelona',
		'Johannesburg',
		'Saint Petersburg',
		'Qingdao',
		'Dalian',
		'Washington, D.C.',
		'Yangon',
		'Alexandria',
		'Jinan',
		'Guadalajara',
	],
	'countries' : [
		'Afghanistan',
		'Albania',
		'Algeria',
		'Andorra',
		'Angola',
		'Antigua & Deps',
		'Argentina',
		'Armenia',
		'Australia',
		'Austria',
		'Azerbaijan',
		'Bahamas',
		'Bahrain',
		'Bangladesh',
		'Barbados',
		'Belarus',
		'Belgium',
		'Belize',
		'Benin',
		'Bhutan',
		'Bolivia',
		'Bosnia Herzegovina',
		'Botswana',
		'Brazil',
		'Brunei',
		'Bulgaria',
		'Burkina',
		'Burundi',
		'Cambodia',
		'Cameroon',
		'Canada',
		'Cape Verde',
		'Central African Rep',
		'Chad',
		'Chile',
		'China',
		'Colombia',
		'Comoros',
		'Congo',
		'Congo {Democratic Rep}',
		'Costa Rica',
		'Croatia',
		'Cuba',
		'Cyprus',
		'Czech Republic',
		'Denmark',
		'Djibouti',
		'Dominica',
		'Dominican Republic',
		'East Timor',
		'Ecuador',
		'Egypt',
		'El Salvador',
		'Equatorial Guinea',
		'Eritrea',
		'Estonia',
		'Ethiopia',
		'Fiji',
		'Finland',
		'France',
		'Gabon',
		'Gambia',
		'Georgia',
		'Germany',
		'Ghana',
		'Greece',
		'Grenada',
		'Guatemala',
		'Guinea',
		'Guinea-Bissau',
		'Guyana',
		'Haiti',
		'Honduras',
		'Hungary',
		'Iceland',
		'India',
		'Indonesia',
		'Iran',
		'Iraq',
		'Ireland {Republic}',
		'Israel',
		'Italy',
		'Ivory Coast',
		'Jamaica',
		'Japan',
		'Jordan',
		'Kazakhstan',
		'Kenya',
		'Kiribati',
		'Korea North',
		'Korea South',
		'Kosovo',
		'Kuwait',
		'Kyrgyzstan',
		'Laos',
		'Latvia',
		'Lebanon',
		'Lesotho',
		'Liberia',
		'Libya',
		'Liechtenstein',
		'Lithuania',
		'Luxembourg',
		'Macedonia',
		'Madagascar',
		'Malawi',
		'Malaysia',
		'Maldives',
		'Mali',
		'Malta',
		'Marshall Islands',
		'Mauritania',
		'Mauritius',
		'Mexico',
		'Micronesia',
		'Moldova',
		'Monaco',
		'Mongolia',
		'Montenegro',
		'Morocco',
		'Mozambique',
		'Myanmar, {Burma}',
		'Namibia',
		'Nauru',
		'Nepal',
		'Netherlands',
		'New Zealand',
		'Nicaragua',
		'Niger',
		'Nigeria',
		'Norway',
		'Oman',
		'Pakistan',
		'Palau',
		'Panama',
		'Papua New Guinea',
		'Paraguay',
		'Peru',
		'Philippines',
		'Poland',
		'Portugal',
		'Qatar',
		'Romania',
		'Russian Federation',
		'Rwanda',
		'St Kitts & Nevis',
		'St Lucia',
		'Saint Vincent & the Grenadines',
		'Samoa',
		'San Marino',
		'Sao Tome & Principe',
		'Saudi Arabia',
		'Senegal',
		'Serbia',
		'Seychelles',
		'Sierra Leone',
		'Singapore',
		'Slovakia',
		'Slovenia',
		'Solomon Islands',
		'Somalia',
		'South Africa',
		'South Sudan',
		'Spain',
		'Sri Lanka',
		'Sudan',
		'Suriname',
		'Swaziland',
		'Sweden',
		'Switzerland',
		'Syria',
		'Taiwan',
		'Tajikistan',
		'Tanzania',
		'Thailand',
		'Togo',
		'Tonga',
		'Trinidad & Tobago',
		'Tunisia',
		'Turkey',
		'Turkmenistan',
		'Tuvalu',
		'Uganda',
		'Ukraine',
		'United Arab Emirates',
		'United Kingdom',
		'United States',
		'Uruguay',
		'Uzbekistan',
		'Vanuatu',
		'Vatican City',
		'Venezuela',
		'Vietnam',
		'Yemen',
		'Zambia',
		'Zimbabwe',
	],


}

def extractMovies():
	file = open('movies_metadata.csv','r')

	csvreader = csv.reader(file)
	for row in csvreader:
		print(row[8])

def calculateEntropyRatio(classes): 
	totalCombinations = 1;
	powerTwosSum = 0
	for key in classes.keys():
		powerOfTwo = math.floor(math.log(len(classes[key]))/math.log(2))
		powerTwosSum+=powerOfTwo
		print(key +' '+str(powerOfTwo))
		totalCombinations*=len(classes[key])
	print(totalCombinations / 2**128)
	print(powerTwosSum)



def downloadImages(className) :
	if(os.path.isdir(className)):
		shutil.rmtree(className)
	os.mkdir(className)

	for item in classes[className]:
		print(item)
		response = requests.get("https://api.pexels.com/v1/search?query="+item, headers={"Authorization":PEXELSAPI_KEY})
		print(response.json())
		original_url = response.json()['photos'][0]['src']['original']
		photo_url = response.json()['photos'][0]['src']['large']
		indexOfDot = original_url.rindex('.')
		extension = original_url[indexOfDot+1:]

		response = requests.get(photo_url)
		file = open(className+"/"+item+"."+extension, "wb")
		file.write(response.content)
		file.close()
		# print(photo_url)
		# urllib.request.urlretrieve( photo_url, '1.jpeg', headers={'User-Agent': 'Mozilla/5.0'})


# downloadImages('cities')
# calculateEntropyRatio(classes)
extractMovies()


